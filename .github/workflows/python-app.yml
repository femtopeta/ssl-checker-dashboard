# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    paths-ignore:
      - 'README.*'
      - 'img/**'
    branches: [ master ]
  pull_request:
    paths-ignore:
      - 'README.*'
      - 'img/**'
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Integration test
      run: |
        #!/usr/bin/env bash
        set -e -x
        cd microservices/scheduler && docker-compose up -d
        sleep 5
        cd -
        gunicorn -b 0.0.0.0:8080 -w 1 app:app > /dev/null 2>&1 & echo $! > pid.file
        sleep 10
        curl -s localhost:8080 | grep 'google.com'
        curl -s localhost:8080/all | grep 'google.com'
        curl -s localhost:8080/days | grep 'google.com'
        curl -s localhost:8080/errors | grep 'notexisting.domain'
        kill $(cat pid.file)
        cd microservices/scheduler && docker-compose stop

